apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-addressable-resolver
  labels:
    duck.knative.dev/addressable: "true"
# Do not use this role directly. These rules will be added to the "addressable-resolver" role.
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channelable-manipulator
  labels:
    duck.knative.dev/channelable: "true"
# Do not use this role directly. These rules will be added to the "channelable-manipulator" role.
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channel-controller
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels/finalizers
    verbs:
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
      - serviceaccounts
    verbs: &everything
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - configmaps
    resourceNames:
      - kt-channel-dispatcher
    verbs:
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/status
    verbs: *everything
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs: *everything
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs: *everything

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kt-channel-controller
  namespace: knative-eventing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channel-dispatcher
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - "" # Core API group.
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "" # Core API Group.
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kt-channel-dispatcher
  namespace: knative-eventing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kt-channel-controller
subjects:
  - kind: ServiceAccount
    name: kt-channel-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kt-channel-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-ch-dispatcher
subjects:
  - kind: ServiceAccount
    name: kt-channel-dispatcher
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-ch-dispatcher
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkatopicchannels.messaging.optum.dev
  labels:
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: messaging.optum.dev
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          # this is a work around so we don't need to flush out the
          # schema for each version at this time
          #
          # see issue: https://github.com/knative/serving/issues/912
          x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  names:
    kind: KafkaTopicChannel
    plural: kafkatopicchannels
    singular: kafkatopicchannel
    categories:
      - all
      - knative
      - messaging
      - channel
    shortNames:
      - ktc
  scope: Namespaced

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kt-channel-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.optum.dev/channel: kafka-channel
      messaging.optum.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kt-channel-controller
      containers:
        - name: controller
          image: ghcr.io/itsmurugappan/controller:v1alpha1@sha256:b5fb5662f185a3e9e526d6fd089ef66f95306a9b612c492717024195f704f4bc
          env:
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: DISPATCHER_IMAGE
              value: ghcr.io/itsmurugappan/dispatcher:v1alpha1@sha256:9336dde1cfd76d90293331734b0a0d047684811ff7affc8919ed43479b1c2c2c
          ports:
            - containerPort: 9090
              name: metrics
          volumeMounts:
            - name: config-logging
              mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kt-channel-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.optum.dev/channel: kafka-channel
      messaging.optum.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kt-channel-controller
      containers:
        - name: controller
          image: ghcr.io/itsmurugappan/controller:v1alpha1@sha256:b5fb5662f185a3e9e526d6fd089ef66f95306a9b612c492717024195f704f4bc
          env:
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: DISPATCHER_IMAGE
              value: ghcr.io/itsmurugappan/dispatcher:v1alpha1@sha256:9336dde1cfd76d90293331734b0a0d047684811ff7affc8919ed43479b1c2c2c
          ports:
            - containerPort: 9090
              name: metrics
          volumeMounts:
            - name: config-logging
              mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-addressable-resolver
  labels:
    duck.knative.dev/addressable: "true"
# Do not use this role directly. These rules will be added to the "addressable-resolver" role.
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channelable-manipulator
  labels:
    duck.knative.dev/channelable: "true"
# Do not use this role directly. These rules will be added to the "channelable-manipulator" role.
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channel-controller
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
      - kafkatopicchannels/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels/finalizers
    verbs:
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
      - serviceaccounts
    verbs: &everything
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - configmaps
    resourceNames:
      - kt-channel-dispatcher
    verbs:
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/status
    verbs: *everything
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs: *everything
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs: *everything

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kt-channel-dispatcher
rules:
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - "" # Core API group.
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - messaging.optum.dev
    resources:
      - kafkatopicchannels
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "" # Core API Group.
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update

---
